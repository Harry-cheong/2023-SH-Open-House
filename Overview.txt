____________________ Overview ____________________

- Structure of repo 


______________________ Clients ______________________

1. Mazerobot
- ev3 robot running ev3dev 
- executes robot cmds from GUI

2. GUI (1 & 2)
- Website
- Custom Interface to allow users to program the robot

3. Log
- Observes the interaction among clients
- Traceback errors 


________________ Channel Interaction ________________

* This is a demonstration of how the channel look like, in reality, messages are not enumerated. 
~[Client ID] [Client Msg]~ 

msg 1 : [Mazerobot] status: Free

msg 2 : [GUI1] Maze_robot run [...]

msg 3 : [Mazerobot] Received

msg 4 : [Mazerobot] status: Occupied

[Robot Completes the GUI Program]


msg 5 : [MazeRunner] status: Free
...


____________________ Break-down ____________________

    # msg 1 : [Mazerobot] status: Free [MazeRobot✅] [GUI✅]

    - Once the robot is ready, this msg will be sent by the robot to the channel
    - Once received by GUIs, GUIs can go ahead to run the seq of movements on the robot


    # msg 2 : [GUI1] Maze_robot run [...] [MazeRobot✅] [GUI✅]

    - ... : commands for the movement of the robot
    - [Optional] : GUI shows that the program is being loaded

    # msg 3 : [Mazerunner] Received [MazeRobot✅] [GUI✅]

    - cfmation from the Maze-Runner 
    - [Optional] GUI shows that the robot is running


    # msg 5 : [Mazerunner] status: Free [MazeRobot✅] [GUI✅]

    - The loop continues 

    # Other messages : [GUI] Interrupt Execution [MazeRobot✅] [GUI✅]

    - if program on pybricks is running, immediately stops the program
    - [Software specification] threading: - one thread to receive incoming cmd and interrupt execution, another one to close pybricks once execution is done



_____________________ Robot cmd _____________________

| Basic Robot Movement |

    1. f1000 [MazeRobot✅] [GUI✅]
    - f : move forward
    - 1000 : for 1000 deg

    2. b1000 [MazeRobot✅] [GUI✅]
    ^

    3. l30 [MazeRobot✅] [GUI✅]
    - l : turn left on the spot
    - 30 : (30/360)*1325; robot to the 30 bearing

    4. r30 [MazeRobot✅] [GUI✅]
    ^

| Code Snippets |

    1. t1000 [MazeRobot✅] [GUI✅]
    - t : line trace 
    - 1000 : for 1000 deg

| Gyro | [❌]

    1. gf1000 [❌]
    gf : pid gyro straight
    1000 : by 1000 deg

    2. gt90 [❌]
    gf : p gyro turn
    90 : until bearing 90 is reached

| Sensors |

    1. lr [MazeRobot✅] [GUI✅]
    - lr : returns light reflection value (0 - 100 arbitrary units)

    2. ud [MazeRobot✅] [GUI✅]
    - usd : returns distance value from ultrasonic sensor (0 - 2000 mm)

[* 🌟 New *] | Indentation |

    1. ...,[,... [MazeRobot✅]
    - [ : increases global indentation by 1 

    2. ...,],... [MazeRobot✅]
    - ] : decreases global indentation by 1 

[* ❗ Revised *] | Loops & Logic |

    1. w(),[,...,] [MazeRobot✅]
    w() -> while true, execute functions inside the bracket

    2. if(condition), ef(condition), el(condition) [MazeRobot✅]
    - checking of syntax done on gui side

    3. kb [MazeRobot✅]
    kb : keyword break 

    4. w(),[,if(condition),[, ... ,], ef(condition),[, ... ,],el(condition),[, ... ,],] [MazeRobot✅]
    - if/else statement nested inside while loop

    5. for(i),[,...,], [MazeRobot✅]
    - executes the loop i times

| Operators |

    1. >, <, ==, <=, >= [MazeRobot✅] [GUI✅]
    - comparison operators

    


